// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// 常用命令
// rm -rf prisma/migrations 删除旧的迁移文件
// npx prisma migrate reset 重新迁移
// npx prisma init 初始化prisma
// npx prisma format 格式化schema
// npx prisma migrate dev --name init 初始化数据库
// npx prisma generate  重新生成Prisma Client

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// * 租户表
model Tenant {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  contact         String?   @db.VarChar(30)
  phone           String?   @db.VarChar(20)
  company         String?   @db.VarChar(50)
  licenseNumber   String?   @db.VarChar(50)
  address         String?   @db.VarChar(255)
  type            Int?      @default(0) @db.TinyInt
  remark          String?   @db.Text
  isPlatformAdmin Int?      @default(0) @db.TinyInt
  trialStartDate  DateTime? @db.DateTime
  trialEndDate    DateTime? @db.DateTime
  startDate       DateTime? @db.DateTime
  endDate         DateTime? @db.DateTime
  status          Int?      @default(0) @db.TinyInt
  delFlag         Int       @default(0) @db.TinyInt
  createdAt       DateTime  @default(dbgenerated("NOW()")) @db.Timestamp
  updatedAt       DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  Users           User[]
  Perms           Perm[]    @relation("TenantPerms")

  @@index([contact, company, delFlag])
  @@map("tenant")
}

// * 用户表
model User {
  id            Int      @id @default(autoincrement()) @db.UnsignedInt
  tenantId      Int      @db.UnsignedInt
  tenant        Tenant   @relation(fields: [tenantId], references: [id])
  username      String?  @db.VarChar(255)
  password      String?  @db.VarChar(255)
  contact       String?  @db.VarChar(50)
  position      String?  @db.VarChar(100)
  phone         String?  @db.VarChar(20)
  isTenantAdmin Int?     @default(0) @db.TinyInt
  status        Int?     @default(0) @db.TinyInt
  remark        String?  @db.Text
  wxId          String?  @db.VarChar(100)
  delFlag       Int      @default(0) @db.TinyInt
  createdAt     DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  updatedAt     DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  Perms         Perm[]   @relation("UserPerms")

  @@index([tenantId, username, contact, status, wxId, delFlag])
  @@map("user")
}

// * 权限关系表
// TODO 路由权限规则前端维护,后端只需要记录用户/租户 => 权限的映射关系
model Perm {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  ownerId   Int     @db.UnsignedInt
  ownerType Int     @db.TinyInt
  perm      String
  tenant    Tenant? @relation("TenantPerms", fields: [ownerId], references: [id], map: "Tenant_Perms_FK")
  user      User?   @relation("UserPerms", fields: [ownerId], references: [id], map: "User_Perms_FK")
}

// model Perm {
//   id        Int      @id @default(autoincrement()) @db.UnsignedInt
//   key       String?  @db.VarChar(255)
//   name      String?  @db.VarChar(255)
//   module    String?  @db.VarChar(255)
//   type      Int?     @default(1) @db.TinyInt
//   status    Int?     @default(1) @db.TinyInt
//   delFlag   Int      @default(0) @db.TinyInt
//   createdAt DateTime @default(dbgenerated("NOW()")) @db.Timestamp
//   updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
//   users     User[]   @relation("UserPerms")
//   tenants   Tenant[] @relation("TenantPerms")

//   @@index([name, delFlag])
//   @@map("perm")
// }

// * 操作日志
model OperLog {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  tenantId   Int?     @db.UnsignedInt
  userId     Int?     @db.UnsignedInt
  type       Int?     @default(0)
  method     String?
  operName   String?
  operParam  String?  @db.Text
  operResult String?  @db.Text
  status     Int?     @db.TinyInt
  errorMsg   String?  @db.Text
  operTime   DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  costTime   BigInt   @db.UnsignedBigInt

  @@index([tenantId, userId, type, operName])
  @@map("log")
}
