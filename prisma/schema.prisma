// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// 常用命令
// rm -rf prisma/migrations 删除旧的迁移文件
// npx prisma migrate reset 重新迁移
// npx prisma init 初始化prisma
// npx prisma format 格式化schema
// npx prisma migrate dev --name init 初始化数据库
// npx prisma generate  重新生成Prisma Client

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// 租户表
model Tenant {
  /// 主键
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 联系人
  contactName    String?   @db.VarChar(30)
  /// 联系电话
  contactPhone   String?   @db.VarChar(20)
  /// 公司名称
  companyName    String?   @db.VarChar(50)
  /// 统一社会信用代码
  licenseNumber  String?   @db.VarChar(50)
  /// 地址
  address        String?   @db.VarChar(255)
  /// 域名
  domain         String?   @db.VarChar(255)
  /// 备注
  remark         String?   @db.VarChar(255)
  /// 用户数量,最大127,-1为无限制
  userCount      Int?      @db.TinyInt
  /// 试用开始时间
  trialStartDate DateTime? @db.DateTime
  /// 试用结束时间
  trialEndDate   DateTime? @db.DateTime
  /// 开始时间
  startDate      DateTime? @db.DateTime
  /// 结束时间
  endDate        DateTime? @db.DateTime
  /// 状态 0: 未使用; 1: 试用中; 2: 试用结束; 3:正在使用; 4:到期;
  status         Int?      @default(0) @db.TinyInt
  /// 是否是VIP
  isPremium      Int?      @default(0) @db.TinyInt()
  /// 逻辑删除 1代表删除
  delFlag        Int       @default(0) @db.TinyInt
  /// 创建时间
  createdAt      DateTime  @default(dbgenerated("NOW()")) @db.Timestamp
  /// 最后更新时间
  updatedAt      DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  User           User[]
  Perm           Perm[]

  @@index([contactName, companyName, delFlag])
  @@map("tenant")
}

/// 用户表
model User {
  /// 主键
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  /// 用户名
  username        String?   @db.VarChar(50)
  /// 密码
  password        String?   @db.VarChar(255)
  /// 昵称
  nickname        String?   @db.VarChar(100)
  /// 是否平台管理员, 1: 是; 0: 否
  isPlatformAdmin Int?      @default(0) @db.TinyInt
  /// 是否主账号 1: 是; 0: 否
  isMaster        Int?      @default(0) @db.TinyInt
  /// 数据权限 1: 全部数据权限 2: 本人数据权限 3: 自定义数据权限
  dataScope       Int?      @db.TinyInt
  /// 邮箱
  email           String?   @db.VarChar(50)
  /// 手机号
  phone           String?   @db.VarChar(20)
  /// 头像
  avatar          String?   @db.VarChar(255)
  /// 状态 1: 正常; 2: 禁用
  status          Int?      @default(1) @db.TinyInt
  /// 最后登录IP
  loginIP         String?   @db.VarChar(255)
  /// 最后登录日期
  loginDate       DateTime? @db.Timestamp()
  /// 备注
  remark          String?   @db.VarChar(500)
  /// 逻辑删除
  delFlag         Int       @default(0) @db.TinyInt
  /// 创建时间
  createdAt       DateTime  @default(dbgenerated("NOW()")) @db.Timestamp
  /// 最后更新时间
  updatedAt       DateTime  @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  /// 租户关联ID
  tenantID        Int       @db.UnsignedInt
  tenant          Tenant    @relation(fields: [tenantID], references: [id])
  Perm            Perm[]

  @@index([username, nickname, isPlatformAdmin, isMaster, status])
  @@map("user")
}

/// 权限表
model Perm {
  /// 主键
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  /// 租户或用户的 ID
  ownerId   Int?     @db.UnsignedInt
  /// 权限类型 1: 租户 2: 用户
  ownerType Int?     @db.TinyInt
  /// 权限
  perm      String?  @db.VarChar(100)
  /// 创建时间
  createdAt DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  /// 最后更新时间
  updatedAt DateTime @default(dbgenerated("NOW() ON UPDATE NOW()")) @db.Timestamp
  tenant    Tenant?  @relation(fields: [ownerId], references: [id], map: "Tenant_Permissions_FK")
  user      User?    @relation(fields: [ownerId], references: [id], map: "User_Permissions_FK")

  @@index([ownerId, ownerType])
  @@map("perm")
}

/// 操作日志
model OperLog {
  /// 主键
  id         Int      @id @default(autoincrement())
  /// 租户ID
  tenantID   Int?     @db.UnsignedInt
  /// 用户ID
  userID     Int?     @db.UnsignedInt
  /// 业务类型
  type       Int?     @default(0)
  /// 执行方法
  method     String?
  /// 操作人
  operName   String?
  /// 操作参数
  operParam  String?  @db.Text
  /// 操作结果
  operResult String?  @db.Text
  /// 状态
  status     Int?     @db.TinyInt
  /// 错误信息
  errorMsg   String?  @db.Text
  /// 请求时间
  operTime   DateTime @default(dbgenerated("NOW()")) @db.Timestamp
  /// 请求消耗时间
  costTime   BigInt   @db.UnsignedBigInt

  @@index([tenantID, userID, type, operName])
  @@map("log")
}
